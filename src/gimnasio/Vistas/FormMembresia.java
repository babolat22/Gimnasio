
package gimnasio.Vistas;


import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import gimnasio.AccesoADatos.MembresiaData;
import java.awt.*;
import javax.swing.*;
import gimnasio.AccesoADatos.SocioData;
import gimnasio.Entidades.Membresia;
import gimnasio.Entidades.Socio;
import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.*;
import java.util.Calendar;
import java.sql.Date;
import java.time.Instant;
//import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Javier
 */
public class FormMembresia extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo=new DefaultTableModel();
    /**
     * Creates new form FormMembresia
     */
    public FormMembresia() {
        initComponents();
        //cargarId();
        armarCabecera();
        escritorioMembresia2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/gimnasio/Imagenes/membresia3.jpg"));
        Image image = icon.getImage();
        socio = new javax.swing.JDesktopPane(){     public void paintComponent(Graphics g){         g.drawImage(image,0,0,getWidth(),getHeight(),this);     } };
        jtFormularioGestionMembresia = new javax.swing.JTextField();
        jtCartelSocioMembresia = new javax.swing.JTextField();
        jtIDSocio = new javax.swing.JTextField();
        jtCartelTipoMembresia = new javax.swing.JTextField();
        jtCartelCantidadPases = new javax.swing.JTextField();
        jtCartelFechaInicio = new javax.swing.JTextField();
        jtCartelFechaFin = new javax.swing.JTextField();
        jbGuardarMembresia = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jtCartelCosto = new javax.swing.JTextField();
        jtCosto = new javax.swing.JTextField();
        jdInicio = new com.toedter.calendar.JDateChooser();
        jlError = new javax.swing.JLabel();
        jcTipo = new javax.swing.JComboBox<>();
        jcPases = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jdFin = new com.toedter.calendar.JDateChooser();
        escritorioMembresia2 = new javax.swing.JDesktopPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtListadoMembresia = new javax.swing.JTable();
        jbListarMembresia = new javax.swing.JButton();
        jbCerrar2 = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbLimpiarTabla = new javax.swing.JButton();
        jbBuscarMembresia = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Formulario de Gesti√≥n de Membresia");

        socio.setPreferredSize(new java.awt.Dimension(930, 510));

        jtFormularioGestionMembresia.setBackground(new java.awt.Color(0, 0, 0));
        jtFormularioGestionMembresia.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jtFormularioGestionMembresia.setForeground(new java.awt.Color(255, 255, 255));
        jtFormularioGestionMembresia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtFormularioGestionMembresia.setText("FORMULARIO DE MEMBRESIA");
        jtFormularioGestionMembresia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jtFormularioGestionMembresia.setCaretColor(new java.awt.Color(255, 51, 255));
        jtFormularioGestionMembresia.setFocusable(false);

        jtCartelSocioMembresia.setBackground(new java.awt.Color(0, 0, 0));
        jtCartelSocioMembresia.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jtCartelSocioMembresia.setForeground(new java.awt.Color(255, 255, 255));
        jtCartelSocioMembresia.setText("ID Socio");
        jtCartelSocioMembresia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jtCartelSocioMembresia.setCaretColor(new java.awt.Color(255, 51, 255));
        jtCartelSocioMembresia.setFocusable(false);
        jtCartelSocioMembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCartelSocioMembresiaActionPerformed(evt);
            }
        });

        jtIDSocio.setToolTipText("");
        jtIDSocio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtIDSocioFocusGained(evt);
            }
        });
        jtIDSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtIDSocioActionPerformed(evt);
            }
        });
        jtIDSocio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtIDSocioKeyTyped(evt);
            }
        });

        jtCartelTipoMembresia.setBackground(new java.awt.Color(0, 0, 0));
        jtCartelTipoMembresia.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jtCartelTipoMembresia.setForeground(new java.awt.Color(255, 255, 255));
        jtCartelTipoMembresia.setText("Tipo de Membresia");
        jtCartelTipoMembresia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jtCartelTipoMembresia.setCaretColor(new java.awt.Color(255, 51, 255));
        jtCartelTipoMembresia.setFocusable(false);

        jtCartelCantidadPases.setEditable(false);
        jtCartelCantidadPases.setBackground(new java.awt.Color(0, 0, 0));
        jtCartelCantidadPases.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jtCartelCantidadPases.setForeground(new java.awt.Color(255, 255, 255));
        jtCartelCantidadPases.setText("Cantidad de Pases");
        jtCartelCantidadPases.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jtCartelCantidadPases.setFocusable(false);

        jtCartelFechaInicio.setBackground(new java.awt.Color(0, 0, 0));
        jtCartelFechaInicio.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jtCartelFechaInicio.setForeground(new java.awt.Color(255, 255, 255));
        jtCartelFechaInicio.setText("Fecha de Inicio");
        jtCartelFechaInicio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jtCartelFechaInicio.setFocusable(false);

        jtCartelFechaFin.setBackground(new java.awt.Color(0, 0, 0));
        jtCartelFechaFin.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jtCartelFechaFin.setForeground(new java.awt.Color(255, 255, 255));
        jtCartelFechaFin.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtCartelFechaFin.setText("Fecha Fin");
        jtCartelFechaFin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jtCartelFechaFin.setFocusable(false);

        jbGuardarMembresia.setBackground(new java.awt.Color(153, 153, 153));
        jbGuardarMembresia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbGuardarMembresia.setForeground(new java.awt.Color(0, 0, 0));
        jbGuardarMembresia.setText("Guardar");
        jbGuardarMembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarMembresiaActionPerformed(evt);
            }
        });

        jbLimpiar.setBackground(new java.awt.Color(153, 153, 153));
        jbLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(153, 153, 153));
        jbSalir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(0, 0, 0));
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jtCartelCosto.setBackground(new java.awt.Color(0, 0, 0));
        jtCartelCosto.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jtCartelCosto.setForeground(new java.awt.Color(255, 255, 255));
        jtCartelCosto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtCartelCosto.setText("Costo");
        jtCartelCosto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jtCartelCosto.setFocusable(false);

        jtCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCostoKeyTyped(evt);
            }
        });

        jdInicio.setMaxSelectableDate(new java.util.Date(2524622478000L));
        jdInicio.setMinSelectableDate(Calendar.getInstance().getTime());

        jlError.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jlError.setForeground(new java.awt.Color(255, 0, 51));
        jlError.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jcTipo.setBackground(new java.awt.Color(102, 102, 102));
        jcTipo.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcTipo.setForeground(new java.awt.Color(255, 255, 255));
        jcTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mensual", "Bimestral", "Trimestral", "Semestral", "Anual", " " }));
        jcTipo.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jcTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTipoActionPerformed(evt);
            }
        });

        jcPases.setBackground(new java.awt.Color(102, 102, 102));
        jcPases.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcPases.setForeground(new java.awt.Color(255, 255, 255));
        jcPases.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "12", "20", "Ilmitados" }));
        jcPases.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jcPases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcPasesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("* Pases Mensuales");

        jdFin.setMaxSelectableDate(new java.util.Date(2524622478000L));
        jdFin.setMinSelectableDate(Calendar.getInstance().getTime());
        jdFin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jdFinMouseClicked(evt);
            }
        });
        jdFin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdFinKeyPressed(evt);
            }
        });

        jtListadoMembresia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Membresia", "ID_Socio", "Tipo", "Cant Pases", "Fecha Inicio", "Fecha Fin", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtListadoMembresia.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtListadoMembresia.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jtListadoMembresia);

        jbListarMembresia.setBackground(new java.awt.Color(153, 153, 153));
        jbListarMembresia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbListarMembresia.setForeground(new java.awt.Color(0, 0, 0));
        jbListarMembresia.setText("Listar Membresias");
        jbListarMembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbListarMembresiaActionPerformed(evt);
            }
        });

        jbCerrar2.setBackground(new java.awt.Color(153, 153, 153));
        jbCerrar2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbCerrar2.setForeground(new java.awt.Color(0, 0, 0));
        jbCerrar2.setText("Cerrar");
        jbCerrar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCerrar2ActionPerformed(evt);
            }
        });

        jbActualizar.setBackground(new java.awt.Color(153, 153, 153));
        jbActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbActualizar.setForeground(new java.awt.Color(0, 0, 0));
        jbActualizar.setText("Actualizar");
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jbEliminar.setBackground(new java.awt.Color(153, 153, 153));
        jbEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(0, 0, 0));
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbLimpiarTabla.setBackground(new java.awt.Color(153, 153, 153));
        jbLimpiarTabla.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbLimpiarTabla.setForeground(new java.awt.Color(0, 0, 0));
        jbLimpiarTabla.setText("Limpiar");
        jbLimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarTablaActionPerformed(evt);
            }
        });

        escritorioMembresia2.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorioMembresia2.setLayer(jbListarMembresia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorioMembresia2.setLayer(jbCerrar2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorioMembresia2.setLayer(jbActualizar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorioMembresia2.setLayer(jbEliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorioMembresia2.setLayer(jbLimpiarTabla, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioMembresia2Layout = new javax.swing.GroupLayout(escritorioMembresia2);
        escritorioMembresia2.setLayout(escritorioMembresia2Layout);
        escritorioMembresia2Layout.setHorizontalGroup(
            escritorioMembresia2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioMembresia2Layout.createSequentialGroup()
                .addComponent(jbListarMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbLimpiarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCerrar2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
        );
        escritorioMembresia2Layout.setVerticalGroup(
            escritorioMembresia2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioMembresia2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(escritorioMembresia2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(escritorioMembresia2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbListarMembresia)
                        .addComponent(jbCerrar2)
                        .addComponent(jbActualizar))
                    .addComponent(jbEliminar)
                    .addComponent(jbLimpiarTabla)))
        );

        jbBuscarMembresia.setBackground(new java.awt.Color(153, 153, 153));
        jbBuscarMembresia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbBuscarMembresia.setForeground(new java.awt.Color(0, 0, 0));
        jbBuscarMembresia.setText("Buscar");
        jbBuscarMembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarMembresiaActionPerformed(evt);
            }
        });

        socio.setLayer(jtFormularioGestionMembresia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtCartelSocioMembresia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtIDSocio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtCartelTipoMembresia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtCartelCantidadPases, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtCartelFechaInicio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtCartelFechaFin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jbGuardarMembresia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jbLimpiar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jbSalir, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtCartelCosto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jtCosto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jdInicio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jlError, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jcTipo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jcPases, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jdFin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(escritorioMembresia2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        socio.setLayer(jbBuscarMembresia, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout socioLayout = new javax.swing.GroupLayout(socio);
        socio.setLayout(socioLayout);
        socioLayout.setHorizontalGroup(
            socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(socioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlError, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                    .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(socioLayout.createSequentialGroup()
                            .addComponent(jtCartelCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtCosto))
                        .addGroup(socioLayout.createSequentialGroup()
                            .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtCartelCantidadPases)
                                .addComponent(jtCartelFechaFin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtCartelTipoMembresia, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtCartelFechaInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtIDSocio)
                                .addComponent(jcTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jdInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, socioLayout.createSequentialGroup()
                                    .addComponent(jcPases, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jdFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(socioLayout.createSequentialGroup()
                            .addComponent(jbGuardarMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbLimpiar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbBuscarMembresia)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jtCartelSocioMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(socioLayout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(jtFormularioGestionMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(507, 507, 507))
            .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(socioLayout.createSequentialGroup()
                    .addGap(356, 356, 356)
                    .addComponent(escritorioMembresia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        socioLayout.setVerticalGroup(
            socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(socioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtFormularioGestionMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCartelSocioMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtIDSocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtCartelTipoMembresia)
                    .addComponent(jcTipo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCartelCantidadPases)
                    .addComponent(jcPases)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtCartelFechaInicio)
                    .addComponent(jdInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtCartelFechaFin)
                    .addComponent(jdFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCartelCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlError, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200)
                .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardarMembresia)
                    .addComponent(jbLimpiar)
                    .addComponent(jbSalir)
                    .addComponent(jbBuscarMembresia))
                .addGap(23, 23, 23))
            .addGroup(socioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, socioLayout.createSequentialGroup()
                    .addContainerGap(22, Short.MAX_VALUE)
                    .addComponent(escritorioMembresia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(socio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(socio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jdFinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdFinKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jdFinKeyPressed

    private void jdFinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdFinMouseClicked
        // TODO add your handling code here:
        Calendar calendario = Calendar.getInstance();
        Date fechaHoy = (Date) calendario.getTime();

        // Establecer la fecha m√≠nima seleccionable como la fecha de hoy
        jdFin.setMinSelectableDate(fechaHoy);
    }//GEN-LAST:event_jdFinMouseClicked

    private void jcPasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcPasesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcPasesActionPerformed

    private void jcTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTipoActionPerformed
        // TODO add your handling code here:
        int opcion = jcTipo.getSelectedIndex();
        String valor = (String)jcTipo.getSelectedItem();
    }//GEN-LAST:event_jcTipoActionPerformed

    private void jtCostoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCostoKeyTyped
        String campo = "COSTO";
        controlSoloNumeros(evt, campo, 10, jtCosto);
    }//GEN-LAST:event_jtCostoKeyTyped

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed

        limpiarTodo();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbGuardarMembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarMembresiaActionPerformed
       if(camposVacios()){ jlError.setText("* Debe completar todos los campos");
       }else{ cargar();}
    }//GEN-LAST:event_jbGuardarMembresiaActionPerformed

    private void jtIDSocioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIDSocioKeyTyped
        String campo = "ID SOCIO";
        controlSoloNumeros(evt, campo, 5, jtIDSocio);
    }//GEN-LAST:event_jtIDSocioKeyTyped

    private void jtIDSocioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtIDSocioFocusGained
        //  limpiarCampo(jtSocioMembresia);
    }//GEN-LAST:event_jtIDSocioFocusGained

    private void jtCartelSocioMembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCartelSocioMembresiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCartelSocioMembresiaActionPerformed

    private void jbListarMembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbListarMembresiaActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        List<Membresia> membresias = new ArrayList<>();
        MembresiaData membresiaData = new MembresiaData();
        membresias = membresiaData.listarMembresia();
        for (Membresia membresia : membresias) {
            Vector renglon = new Vector<>();
            renglon.add(membresia.getId_membresia());
            renglon.add(membresia.getId_socio().getId_socio());
            renglon.add(membresia.getTipo());
            renglon.add(membresia.getCant_pases());
            renglon.add(membresia.getFecha_inicio());
            renglon.add(membresia.getFecha_fin());
            renglon.add(membresia.getCosto());
            modelo.addRow(renglon);
          }
        
    }//GEN-LAST:event_jbListarMembresiaActionPerformed

    private void jbCerrar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCerrar2ActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        escritorioMembresia2.setVisible(false);
    }//GEN-LAST:event_jbCerrar2ActionPerformed

    private void jbBuscarMembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarMembresiaActionPerformed
         llenarTabla();
        if(!escritorioMembresia2.isVisible()&&flag||jtIDSocio.getText().equals("")){
            escritorioMembresia2.setVisible(true);
            flag= false;
        }
    }//GEN-LAST:event_jbBuscarMembresiaActionPerformed

    private void jtIDSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtIDSocioActionPerformed
         llenarTabla();
        if(!escritorioMembresia2.isVisible()&&flag){
            escritorioMembresia2.setVisible(true);
            flag= false;
        }
    }//GEN-LAST:event_jtIDSocioActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int selectedRow = jtListadoMembresia.getSelectedRow();
            if(selectedRow != -1) {
                int respuesta = JOptionPane.showConfirmDialog(
              jbEliminar, 
                   "¬øDeseas continuar con la eliminac√≥n?", 
                    "Confirmaci√≥n", 
                    JOptionPane.YES_NO_OPTION
                );
                if (respuesta == JOptionPane.YES_OPTION) {
                    MembresiaData membresiaData = new MembresiaData();
                    Object value = jtListadoMembresia.getValueAt(selectedRow, 0);
                    
                    membresiaData.cancelarMembresia(Integer.parseInt(value.toString()));
                    modelo.removeRow(selectedRow);
                }else{
                    if(respuesta == JOptionPane.NO_OPTION) {
                       jtListadoMembresia.clearSelection();
                    }       
                }   
            }else {
                JOptionPane.showMessageDialog(jtListadoMembresia, "Por favor, seleccione una Membresia para eliminar.");
            }
      
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbLimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarTablaActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
    }//GEN-LAST:event_jbLimpiarTablaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane escritorioMembresia2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBuscarMembresia;
    private javax.swing.JButton jbCerrar2;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardarMembresia;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbLimpiarTabla;
    private javax.swing.JButton jbListarMembresia;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox jcPases;
    private javax.swing.JComboBox<String> jcTipo;
    private com.toedter.calendar.JDateChooser jdFin;
    private com.toedter.calendar.JDateChooser jdInicio;
    private javax.swing.JLabel jlError;
    private javax.swing.JTextField jtCartelCantidadPases;
    private javax.swing.JTextField jtCartelCosto;
    private javax.swing.JTextField jtCartelFechaFin;
    private javax.swing.JTextField jtCartelFechaInicio;
    private javax.swing.JTextField jtCartelSocioMembresia;
    private javax.swing.JTextField jtCartelTipoMembresia;
    private javax.swing.JTextField jtCosto;
    private javax.swing.JTextField jtFormularioGestionMembresia;
    private javax.swing.JTextField jtIDSocio;
    private javax.swing.JTable jtListadoMembresia;
    private javax.swing.JDesktopPane socio;
    // End of variables declaration//GEN-END:variables
    
    private void cargar(){
           try{
                Membresia membresia = new Membresia();                
                SocioData socioData = new SocioData();               
                membresia.setId_socio((socioData.buscarSocioPorId(Integer.parseInt(jtIDSocio.getText()))));
                membresia.setTipo((String) jcTipo.getSelectedItem());
                membresia.setCant_pases(Integer.parseInt((String)jcPases.getSelectedItem()));
                java.util.Date fechaIni = jdInicio.getDate();
                java.sql.Date sqlFechaInicio = new java.sql.Date(fechaIni.getTime());
                membresia.setFecha_inicio(sqlFechaInicio);
                java.util.Date fechaFin = jdFin.getDate();
                java.sql.Date sqlFechaFin = new java.sql.Date(fechaFin.getTime());
                membresia.setFecha_fin(sqlFechaFin);
                BigDecimal costo = new BigDecimal(jtCosto.getText());
                membresia.setCosto(costo);
                membresia.setEstado(true);
                if(camposVacios()) throw new NumberFormatException();
//                validarLongitudMin();
                //validarRangoMin();
                MembresiaData membresiaData = new MembresiaData();
                membresiaData.registrarMembresia(membresia);
                limpiarTodo();    
                
            }catch(NumberFormatException ex){
                jlError.setText("* Debe completar todos los campos");
            }catch(Exception ec) {
                JOptionPane.showMessageDialog(null, "no se pudo cargar membresia\n"+ec.getMessage());
            }
    }
    
    private boolean camposVacios(){
    return jtIDSocio.getText().equals("")||jdInicio.getDate()==null||jdFin.getDate()==null;    
    }
    
    public void limpiarTodo(){
        JTextField[] campos = {jtIDSocio, jtCosto};
        for (JTextField campo : campos) {
            campo.setText(null);
        }
        jdInicio.setDate(null);
        jdFin.setDate(null);
        
        //jlError.setText(null);
    }
    
    
    private void controlSoloNumeros(java.awt.event.KeyEvent evt, String campo, int limite, JTextField jtextfield){
        final int keyChar = evt.getKeyChar();
        if(!(Character.isDigit(keyChar))){
            jlError.setText("* Error en '"+campo+"': Debe ingresar solo n√∫meros");
            evt.consume();
        }else{
            jlError.setText("");
        }
        if(jtextfield.getText().length() == limite){
           jlError.setText("* Error en '"+campo+"': Longitud max: "+limite+" d√≠gitos");
            evt.consume();
        }
    }
//    
//    private void cargarId(){
//        SocioData sociodata = new SocioData();
//        if(sociodata.ultimoId()!=0){
//            jtIDMembresia.setText(String.valueOf(sociodata.ultimoId()+1));
//        }
//    }
    
    private void armarCabecera(){
         modelo.addColumn("ID Membresia");
         modelo.addColumn("ID Socio");
         modelo.addColumn("Tipo");
         modelo.addColumn("Cant Pases");
         modelo.addColumn("Fecha Inicio");
         modelo.addColumn("Fecha Fin");
         modelo.addColumn("Costo");
         jtListadoMembresia.setModel(modelo);
     }
    
    private void limpiarTabla(){
        DefaultTableModel model = (DefaultTableModel) jtListadoMembresia.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
     }
    
    private void llenarTabla(){
        if(!jtIDSocio.getText().equals("")){
            MembresiaData membresiaData = new MembresiaData();
            Membresia membresia;
            membresia = membresiaData.buscarMembresiaPorSocio(Integer.parseInt(jtIDSocio.getText()));
            llenarVector(membresia);
        }
    }
    boolean flag = false;
    private void llenarVector(Membresia membresia){
       
        if(membresia.isEstado()){
            Vector renglon = new Vector<>();
            renglon.add(membresia.getId_membresia());
            renglon.add(membresia.getId_socio().getId_socio());
            renglon.add(membresia.getTipo());
            renglon.add(membresia.getCant_pases());
            renglon.add(membresia.getFecha_inicio());
            renglon.add(membresia.getFecha_fin());
            renglon.add(membresia.getCosto());
            modelo.addRow(renglon);
            flag = true;
        }
    }
}
